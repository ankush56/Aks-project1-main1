apiVersion: apps/v1
kind: Deployment
metadata:
  name: python-app-deployment
spec:
  selector: #match label and assign this deployment OBJECT to pods with label app:nginx
    matchLabels:  
      app: hellopythonapp
  replicas: 1
  template:   #Template used to create pods
    metadata:
      name: hellopythonapp
      labels:   #label for pod app=nginx
        app: hellopythonapp
    spec:
################## Set Volumes ########################################
################## Secret and PVC ####################################   
      volumes:
      # Secret volume mount
      - name: mysecret
        secret:
          secretName: clientsecret  

############### Persistent volume mount ###############################
      # We create PV first. Then PVC. On deployment we mount PVC
      - name: appdata-volume
        persistentVolumeClaim:
          claimName: mypvc    #refer pvc created from pvc.yml

#####Config map volum e####
      - name: config-volume
        configMap:
          name: myapp-configapp

################## Container ###########################              
      containers:
      - name: hellopythonappcontainer
        image: walia56/pyhello:v36   #17 working 
        volumeMounts:
          - name: appdata-volume
            mountPath: /app/appdata   #Path on container to mount
          
          - name: config-volume   #config volume mount
            mountPath: /etc/config

############## Readiness prob check ##################
        readinessProbe:
          httpGet:
            path: /
            port: 8000
          initialDelaySeconds: 6
          periodSeconds: 5        

        livenessProbe:
          httpGet:
            path: /
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 15

###########  Environments Variables ############   
        env:
          - name: customenv
            value: "Hello from customenv"
          - name: lob
            value: "XYZLOB"
          - name: DATA_PATH
            value: '/app/appdata'
          - name: environment
            valueFrom:
              configMapKeyRef:
                name: myapp-configapp
                key: environment

          - name: MONGO_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mysecret
                key: mongo_password 

          - name: MONGO_USERNAME
            valueFrom:
              secretKeyRef:
                name: mysecret
                key: mongo_user    

          - name: VAULT_TOKEN
            valueFrom:
              secretKeyRef:
                name: mysecret
                key: vault_token                                             

############  Secrets ############################         
    # Use secrets from secret.yml 
    #in your Deployment.yaml file, you can modify the container spec to add the secrets as environment variables:
    # The ENVIRONMENT variable CLIENT_SECRET is set to the value of the key key in the mysecret secret.          
 
          - name: CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: mysecret
                key: clientsecret
##################################################                 
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 8000
